/*
 * pruebaCliente.c
 *
 *  Created on: 11/9/2015
 *      Author: utnso
 */

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netdb.h>
#include <unistd.h>

#define IP "127.0.0.1"
#define PUERTO "6667"
#define PACKAGESIZE 1024

typedef struct Protocolo {
	char id[6];
	int cantidadBytes;
} ProtocoloCabecera;

typedef enum identificadores {
	correr = 0
} Identidicadores;



int main() {

	struct addrinfo hints;
	struct addrinfo *serverInfo;

	memset(&hints, 0, sizeof(hints));
	hints.ai_family = AF_UNSPEC;
	hints.ai_socktype = SOCK_STREAM;

	getaddrinfo(IP, PUERTO, &hints, &serverInfo);

	int serverSocket;
	serverSocket = socket(serverInfo->ai_family, serverInfo->ai_socktype,
			serverInfo->ai_protocol);

	connect(serverSocket, serverInfo->ai_addr, serverInfo->ai_addrlen);
	freeaddrinfo(serverInfo);

	int enviar = 1;
	char message[PACKAGESIZE];

	printf(
			"Conectado al servidor. Bienvenido al sistema, ya puede enviar mensajes. Escriba 'exit' para salir\n");

	while (enviar) {
		void *buffer = malloc(16);
		fgets(buffer,16,stdin);
		if (!strcmp(message, "exit\n"))
			enviar = 0;
		if (enviar) {

			send(serverSocket, buffer, 16, 0);
			free(buffer);
		}
	}

	close(serverSocket);
	return 0;

}
